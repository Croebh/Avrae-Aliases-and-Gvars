embed {{G=load_json(get_gvar('fd140088-ef17-447e-a0a2-11452c3ab1f3'))}}{{r,hd,a,Z,D,n=get_raw(),"Hit Dice",G[0],combat(),get(G[2]),'\n'}}{{C,dc=r.consumables.get('custom',{}),r.spellbook.dc}}{{S=n.join([f"{slots_str(i)}"for i in range(1,10)if get_slots_max(i)])}}{{c=[x for x in C]}}{{N=load_json(get('hudignore','[]'))}}{{[c.remove(x)for x in N if x in c]}}{{X=G[3]if cc_exists(G[3])else 0}}{{X and X in c and c.remove(X)}}{{c.sort()}}{{exh='Exhaustion'}}{{c.count(exh)and c.remove(exh)}}{{HD=' | '.join([f'**HD ({x.strip("Hit Dice()")}):** {cc_str(x)}'for x in c if hd in x])if c else''}}{{[c.pop(c.index(i))for i in c[::-1]if hd in i]}}{{A=[x[::-1]for x in c if[y for y in a if y in x.lower()]]if c else[]}}{{A.sort(reverse=1)}}{{A=n.join([f"**{x[::-1].title()}:** {get_cc(x[::-1])}"for x in A])if A else[]}}{{[c.pop(c.index(i))for i in c[::-1]if[y for y in a if y in i.lower()]]}}{{O=[i for i in c if not C[i].get('max')]}}{{[c.remove(i)for i in O]}}{{O=n.join([f"**{x}:** {get_cc(x)}"for x in O])}}{{cc=n.join([f"""**{x}{' (Short)'if C[x].get('reset')=='short'else''}:** {cc_str(x)if D else str(get_cc(x))+(f' / {get_cc_max(x)}'if C[x].get('max') else'')}"""for x in c])if c else''}}
-title "<name>"
{{not S or f'-f "Spell Slots{f" (DC {dc})"if dc else""}|{S}"'}}
{{not cc or f'-f "Limited Abilities|{cc}"'}}
{{not A or f'-f "Ammunition|{A}"'}}
{{not O or f'-f "Tracker|{O}"'}}
-thumb <image> -color <color>{{pm=get_raw().get("skill_effects",{}).get("perception","")+"&*&"}}
-desc "**HP:** {{hp_str()}} | **AC:** {{Z.me.ac if Z and Z.me else armor}}
**Initiative:** {{f'{r.skills.initiative:+}'}} | **Passive Perception:** {{10+r.skills.perception+(5*('adv'in pm)-5*('dis'in pm))+(5*('observant'in get('feats','').lower())) }}{{f"\n**Experience:** {get_cc(X):,}/{G[1][min(level,19)]:,}"if X else''}}{{f"\n**{exh} Level:** {get_cc(exh)} / 6"if cc_exists(exh)and get_cc(exh)>0 else''}}
{{HD if HD else''}}"