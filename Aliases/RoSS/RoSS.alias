{{g=load_json(get_gvar("310e8e2a-3330-4ccb-8739-e5ed3614c16b"))}}{{""if exists("brewspells")and[set('g',g+load_json(get_gvar(x)))for x in load_json(brewspells)if get_gvar(x)]else""}}{{ol,a,r,P=load_json(get("RoSS","[]")),&ARGS&,get_raw(),['st','nd','rd','th','th']}}{{m,C=0 if not a else 1 if a[0]=="store"else 2 if a[0]=="cast"else 0,{"spell":"","dc":r.spellbook.dc,"b":r.spellbook.attackBonus,"mod":spell,"caster":name,"level":0} }}{{t=[set(x,a[a.index("-"+x)+1]if"-"+x in a and len(a)>1+a.index("-"+x)else C[x]if x in C else'')for x in C]}}{{S=([x for x in g if a[1].lower()==x.name.lower()]+[{"name":"","level":0}])[0]if len(a)>1 else{"name":"","level":0} }}{{S['level']=argparse(a).last('l',S.level,int)}}{{set("m",3)if m==1 and(S.level+sum([x.level for x in ol])>5)else""}}{{spell=S.name if m==1 else a[1]if len(a)>1 else''}}{{s=[sp for sp in ol if spell.lower()in sp.spell.lower()]}}{{(set("m",4)if m==2 else"")if not s else set("s",s[0])}}{{ol.remove(s)if s and s in ol and m==2 else""}}{{set("C",{"spell":spell,"dc":dc,"b":b,"mod":mod,"caster":caster,"level":S.level}) or set_cvar("RoSS",dump_json(ol+[C])) or f"embed -title '{spell} was stored in the Ring of Spell Storing'" if m==1 else set_cvar("RoSS",dump_json(ol)) or f"""cast "{s.spell}" -i -dc {s.dc} -b {s.b} -mod {s.mod} {f'-l {s.level}'if s.get('level')else''} -phrase "Originally cast{f' at {s.level}{P[s.level-1]} level'if s.get('level')else''} by {s.caster}" """+" ".join(a[2:])if m==2 else'embed -title "That is Too Much Power!"'if m==3 else'embed -title "No Spell Found!" -desc "The spell you are trying to cast isn\'t stored in the Ring of Spell Storing."'if m==4 else get_gvar("c4a99883-ec09-45e9-baf9-c1210c20b670")}} -color <color> -thumb <image>{{nl=load_json(get("RoSS","[]"))}} -f "Spells Stored ({{sum([([sp.get('level',x.level)for x in g if x.name==sp.spell]+[0])[0]for sp in nl])}}/5)|{{", ".join([sp.spell for sp in nl])if len(nl)else"*None*"}}"