embed {{g,args=load_json(get_gvar('f5cacc9a-ac77-4261-bbad-6ce577c61778')),&ARGS&}}
{{not args or (len(args) in [2,3,4,5]) or err('Invalid arguments. Run `!distance` with no arguments to see help.')}}
{{x,X,y,Y = '0','0',0,0}}
{{[set('x' if args.index(item) == 0 else 'X', ''.join([i for i in item if i.isalpha()])) or set('y' if args.index(item) == 0 else 'Y', int(''.join([i for i in item if i.isdigit()]))) for item in args[:2]] if len(args)<4 and all([not i.isalpha() and not i.isdigit() and i.isalnum() for i in args[:2]]) else set('x', args[0]) or set('y', int(args[1])) or set('X', args[2]) or set('Y', int(args[3]))}}
{{z = args[2] if len(args)==3 else args[4] if len(args)==5 else 0}}
{{z = int(z.replace('ft',''))//5 if z and z.replace('ft','').isdigit() else None}}
{{set('x', g.alph.index(x.lower()))}}
{{set('X', g.alph.index(X.lower()))}}
{{xx,yy=x-X,y-Y}}

{{quad=1 if xx>=0 and yy>=0 else 2 if xx>=0 and yy<=0 else 3 if xx<=0 and yy<=0 else 0}}
{{degree=([i[0] for i in g.tan if i[1]>=(xx if xx>=0 else xx*-1)/(yy if yy>=0 else yy*-1)][0] if yy and xx else 90)+90*quad}}

{{distance = int(round(sqrt((xx*xx)+(yy*yy)),0))}}
{{distance = (int(round(sqrt((distance*distance) + (z*z)),0)))*5 if z else distance*5}}

-title "Cartesian Coordinate Distance"
{{f""" -f "({g.alph[x].upper()}, {y}) -> ({g.alph[X].upper()}, {Y}){f" ({z*5} ft. up)" if z else ''}|{distance} ft. {g.cardinal[floor((degree-180)/22.5+0.5)%16]} (~{degree}Â°)" """ if args else f""" -desc "{g.help}" """}}
-footer "!distance [x1, y1] [x2, y2] [z]"