echo
<drac2>
c = combat()
args = """&*&"""

target = None

try:
  attacks = load_yaml(args)
except:
  try:
    target = c.get_combatant("&1&")
    attacks = load_yaml(args[len(""" %1% """)-2:])
  except:
    return "The automation provided was invalid json/yaml"

if not args:
  return "You did not provide automation"
if not c or (not target and not c.current):
  return f"There is no active combatant"
target = target or c.current

if typeof(attacks) == "SafeDict":
  attacks = [attacks]
effect = target.add_effect(f"Action Automation", attacks=[{"attack": attack} for attack in attacks])
return f""" Added {effect} to {target.name} """
</drac2>