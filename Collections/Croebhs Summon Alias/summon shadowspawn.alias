<drac2>
TYPE = "Shadowspawn"
SPELL_NAME = "Summon Shadowspawn"
SPELL_DESC = "You call forth a shadowy spirit. It manifests in an unoccupied space that you can see within range. This corporeal form uses the Shadow Spirit stat block. When you cast the spell, choose an emotion: Fury, Despair, or Fear. The creature resembles a misshapen biped marked by the chosen emotion, which determines certain traits in its stat block. The creature disappears when it drops to 0 hit points or when the spell ends.\n\nThe creature is an ally to you and your companions. In combat, the creature shares your initiative count, but it takes its turn immediately after yours. It obeys your verbal commands (no action required by you). If you don't issue any, it takes the Dodge action and uses its move to avoid danger."
MIN_LEVEL = 3

using(init_add="f48672c2-8f25-4170-ba39-d5f6ffd38bd3")

args = argparse(["-type"] + &ARGS&)
c = combat()
ch = character()
sab = ch.spellbook.sab
sdc = ch.spellbook.dc
true, false, null = True, False, None

warlock = ch.levels.get('Warlock')
min_slot = max(MIN_LEVEL, ((warlock >= 9) + (warlock >= 7) + (warlock >= 5) + (warlock >= 3) + 1))

if not (c and c.me):
  return f"""embed -title "Woopsie!" -desc "You're not in initiative!" """

spell_level = args.last('l', min_slot, int)
summon_type = args.last('type', "", str).lower()
ignore  = args.last('i')

stat_block = {
  "hp":           (15 * spell_level),
  "ac":           11 + spell_level,
  "pb":           proficiencyBonus,
  "strength":     13,
  "dexterity":    16,
  "constitution": 15,
  "intelligence": 4,
  "wisdom":       10,
  "charisma":     16,
  "type":         "monstrosity",
  "resist":       ["necrotic"],
}

attacks = [{"name":"Chilling Rend","automation":[{"type":"target","target":"each","effects":[{"type":"attack","attackBonus":sab,"hit":[{"type":"damage","damage":f"1d12 + 3 + {spell_level} [cold]"}],"miss":[],"adv":"0"}]},{"type":"text","text":"*Melee Weapon Attack:* your spell attack modifier to hit, reach 5 ft., one target. *Hit:* 1d12 + 3 + the spell's level cold damage."}],"_v":2},{"name":"Dreadful Scream","automation":[{"type":"target","target":"self","effects":[{"type":"ieffect2","name":"Dreadful Scream Used","duration":-1,"stacking":true}]},{"type":"text","text":"The spirit screams. Each creature within 30 feet of it must succeed on a Wisdom saving throw against your spell save DC or be frightened of the spirit for 1 minute. The frightened creature can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success."}],"_v":2,"verb":"releases","activation_type":1}]
extra_effects = []
match summon_type:
  case "fury":
    summon_name = "Fury"
  case "despair":
    summon_name = "Despair"
    attacks.extend([{"name":"Weight of Sorrow","automation":[{"type":"target","target":"each","effects":[{"type":"ieffect2","name":"Weight of Sorrow","duration":1,"desc":"Speed reduced by 20ft"}]},{"type":"text","text":"Any creature, other than you, that starts its turn within 5 feet of the spirit has its speed reduced by 20 feet until the start of that creature's next turn."}],"_v":2,"verb":"reveals the","proper":true,"activation_type":8}])
  case "fear":
    summon_name = "Fear"
    attacks.extend([{"name":"Shadow Stealth","automation":[{"type":"target","target":"self","effects":[{"type":"check","ability":["stealth"]}]},{"type":"text","text":"While in dim light or darkness, the spirit takes the Hide action."}],"_v":2,"verb":"uses","proper":true,"activation_type":3}])
  case _:
    return f"""embed -title "Woopsie!" -desc "You didn't select a type!" """

if not ignore:
  if not ch.spellbook.get_slots(spell_level):
    return f"""embed -title "Woopsie!" -desc "You don't have any slots left!" -f "Spell Slots|{ch.spellbook.slots_str(spell_level)}" """
  if not ch.spellbook.can_cast(SPELL_NAME, spell_level):
    return f"""embed -title "Woopsie!" -desc "You don't have that spell prepared!" """
  ch.spellbook.use_slot(spell_level)

custom_names = load_yaml(get('summon_names', '{}'))
s_name = args.last('name')
if s_name == 'reset':
  custom_names.pop(summon_name, None)
elif s_name:
  custom_names[summon_name] = s_name
ch.set_cvar('summon_names', dump_yaml(custom_names))
s_name = custom_names.get(summon_name, f"Summoned {summon_name} {TYPE} ({init_add.get_initials(name)})")

stat_block['p'] = True
stat_block['group'] = f"{init_add.get_initials(name)}'s Summons"
stat_block['note'] = f"Summoned by {name}\nMultiattack: {max(1, spell_level//2)}"

c.me.set_group(f"{init_add.get_initials(name)}'s Summons")
c.me.add_effect(f"Summon {TYPE}", concentration=True, duration=600)

embed_args = {
  "title": f"{name} summoned a {summon_name} {TYPE}!",
  "desc": SPELL_DESC,
  "fields": [{"title": "Spell Slots", "desc": f"{ch.spellbook.slots_str(spell_level)} {'(-1)' if not ignore else ''}"}],
  "footer": f"{ctx.prefix+ctx.alias} | Made by Croebh",
  "color": color,
  "thumb": image
}

summon_command = init_add.build_init_add(s_name, c.me.init, stat_block)
embed = init_add.build_tembed(**embed_args, init_name=s_name, attacks=attacks, effect_name=f"Summon {TYPE}", extra_effects=extra_effects)

return f"""multiline
{summon_command}
{embed}
"""
</drac2>