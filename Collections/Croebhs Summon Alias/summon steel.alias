<drac2>
FEATURE_DESC = "Your tinkering has borne you a companion, a steel defender. It's friendly to you and your companions, and it obeys your commands. See its game statistics in the Steel Defender stat block, which uses your proficiency bonus (PB) in several places. You determine the creature's appearance and whether it has two legs or four; your choice has no effect on its game statistics."

using(init_add="f48672c2-8f25-4170-ba39-d5f6ffd38bd3")

args = argparse(&ARGS&)
c = combat()
ch = character()
ignore  = args.last('i')

sab = ch.spellbook.sab
sdc = ch.spellbook.dc
true, false, null = True, False, None

artificer = ch.levels.get('Artificer')
if not( artificer >= 3 or ignore):
  return f"""embed -title "Woopsie!" -desc "You're not an Artificer of sufficient level!" """

if ignore:
  artificer = level  # University Artificers hate this one trick

if not (c and c.me):
  return f"""embed -title "Woopsie!" -desc "You're not in initiative!" """

stat_block = {
  "hp": 2 + intelligenceMod + (5 * artificer),
  "ac": 15 + (2 * (artificer >= 15)),
  "pb": proficiencyBonus,
  "strength": 14,
  "dexterity": 12,
  "constitution": 14,
  "intelligence": 4,
  "wisdom": 10,
  "charisma": 6,
  "type": "construct",
  "save": ["dex", "con"],
  "prof": ["athletics"],
  "exp": ["perception"]
}

summon_name = "Steel Defender"
attacks = [{"name":"Force-Empowered Rend","automation":[{"type":"target","target":"each","effects":[{"type":"attack","attackBonus":sab,"hit":[{"type":"damage","damage":f"1d8 + {proficiencyBonus} [force]"}],"miss":[],"adv":"0"}]},{"type":"text","text":"*Melee Weapon Attack:* your spell attack modifier to hit, reach 5 ft., one target you can see. *Hit:* 1d8 + PB force damage."}],"_v":2},{"name":"Repair","automation":[{"type":"target","target":"self","effects":[{"type":"ieffect2","name":"Repair Used","stacking":true}]},{"type":"condition","condition":"any(targets)","onTrue":[{"type":"target","target":"each","effects":[{"type":"damage","damage":f"2d8 + {proficiencyBonus} [heal]"}]}],"onFalse":[{"type":"target","target":"each","effects":[{"type":"damage","damage":f"2d8 + {proficiencyBonus} [heal]"}]}],"errorBehaviour":"false"},{"type":"text","text":"The magical mechanisms inside the defender restore 2d8 + PB hit points to itself or to one construct or object within 5 feet of it."}],"_v":2,"verb":"begins to","proper":true,"activation_type":1},{"name":"Deflect Attack","automation":[{"type":"condition","condition":f"{int(artificer >= 15)}","onTrue":[{"type":"target","target":"each","effects":[{"type":"damage","damage":f"1d4 + {intelligenceMod} [force]"}]}],"onFalse":[],"errorBehaviour":"false"},{"type":"text","text":"The defender imposes disadvantage on the attack roll of one creature it can see that is within 5 feet of it, provided the attack roll is against a creature other than the defender."}],"_v":2,"verb":"uses","proper":true,"activation_type":4}]
extra_effects = []

custom_names = load_yaml(get('summon_names', '{}'))
s_name = args.last('name')
if s_name == 'reset':
  custom_names.pop(summon_name, None)
elif s_name:
  custom_names[summon_name] = s_name
ch.set_cvar('summon_names', dump_yaml(custom_names))
s_name = custom_names.get(summon_name, summon_name)

stat_block['p'] = True
stat_block['group'] = f"{name}'s Summons"
stat_block['note'] = f"Summoned by {name}"

c.me.set_group(f"{name}'s Summons")

embed_args = {
  "title": f"{name} summoned their {summon_name}!",
  "desc": FEATURE_DESC,
  "fields": [],
  "footer": f"{ctx.prefix+ctx.alias} | Made by Croebh",
  "color": color,
  "thumb": image
}

summon_command = init_add.build_init_add(s_name, c.me.init, stat_block)
embed = init_add.build_tembed(**embed_args, init_name=s_name, attacks=attacks, effect_name=f"Summon Steel Defender", extra_effects=extra_effects)

return f"""multiline
{summon_command}
{embed}
"""
</drac2>